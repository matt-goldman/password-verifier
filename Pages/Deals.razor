@page "/Deals"
@using Shared
@inject HttpClient _httpClient
@inject NavigationManager navigation

@if (isLoading)
{
    <div class="d-flex justify-content-center align-items-center vw-100 vh-100">
        <div class="mx-auto my-auto">
            <p class="text-center">Loading deals..</p>
            <div class="spinner-border text-primary" role="status"/>
        </div>
    </div>
}

<div class="container">
    @if (!isLoading)
    {
        <div class="px-4 pb-1 my-4">
            <div class="mx-auto d-block mb-2">
                <div class="d-flex flex-row justify-content-center align-items-center">
                    <div>
                        <img class="dp-logo" src="/images/discount-pal-logo.svg" alt="discount pal logo">  
                    </div>
                    <div>
                        <h1 class="display-3 fw-bold product-title align-middle">Discount<br>Pal</h1>  
                    </div>
                </div>
            </div>
            <div class="col-lg-6 mx-auto">
                <p class="lead mb-4 text-center">Check out some of the hot deals we've got on offer right now!</p>
            </div>
        </div>
        <div class="d-flex flex-row flex-wrap">
            @foreach (var product in Products)
            {
                <div class="card my-2 mx-2" style="width: 24rem;">
                    <img class="card-img-top" src="@product.image" alt="Card image cap">
                    <div class="card-body">
                        <div class="d-flex flex-column justify-content-between h-100">
                            <h5 class="card-title highlight-discount product-title">@product.title</h5>
                            <p class="card-text">
                                @product.TruncatedDescription
                                <br/>
                                <a href="javascript:void(0)" @onclick="SignUp">see more</a>
                            </p>
                            <div class="my-auto"> &nbsp; </div>
                            <div class="d-flex justify-content-between mt-auto">
                                <div class="d-flex flex-column justify-content-between">
                                    <div>
                                        @for (int i = 0; i < product.Rating; i++)
                                        {
                                            <span>⭐</span>
                                        }
                                    </div>
                                    <span>@product.NumberOfReviews reviews</span>
                                </div>
                                <div class="d-flex flex-column justify-content-between align-items-end">
                                    <div>
                                        <del>
                                            @product.Price
                                        </del>
                                    </div>
                                    <div class="font-weight-bold" style="color: #4bf38a; font-size: large">
                                        <strong>@product.DiscountedPrice</strong>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="d-flex flex-row justify-content-end">
                            <a href="javascript:void(0)" class="btn btn-primary mt-auto ml-auto mr-2" @onclick="SignUp">Add to cart <span class="oi oi-cart" aria-hidden="true"></span> </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<Modal Title="Sign up to see more" @ref=signupModal>
    <ModalContent>
        <SignupForm OnSignupClicked="ShowValidation" OnPrivacyClicked="ShowPrivacy" OnTermsClicked="ShowTerms" />
    </ModalContent>
</Modal>

<Modal Title="Terms and Conditions" @ref="termsModal" ShowCloseButton="true" CloseButtonText="Agree" IsLarge="true">
    <ModalContent>
        <Terms />
    </ModalContent>
</Modal>

<Modal Title="Privacy Policy" @ref="privacyModal" ShowCloseButton="true" CloseButtonText="Agree" IsLarge="true">
    <ModalContent>
        <Privacy />
    </ModalContent>
</Modal>

@code {
    string apiUri = "https://fakestoreapi.com/products";

    bool isLoading = true;

    List<Product> Products = new List<Product>();
    
    Modal signupModal;
    Modal termsModal;
    Modal privacyModal;
    
    private void ShowValidation()
    {
        navigation.NavigateTo("/validate");
    }

    private async void ShowPrivacy()
    {
        await privacyModal.OpenModal();
    }

    private async void ShowTerms()
    {
        await termsModal.OpenModal();
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var products = await _httpClient.GetFromJsonAsync<Product[]>(apiUri);

            Products = products.ToList();

            isLoading = false;
            
            StateHasChanged();
        }
    }

    private async void SignUp()
    {
        await signupModal.OpenModal();
    }

}