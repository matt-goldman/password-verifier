@using System.Timers
<div class="d-flex flex-column">
    <div>
        <p style="color:black;">Thanks for sharing your username and password. Checking to see if you have just given me access to:</p>
    </div>
    @foreach (var source in Sources)
        {
            <div class="d-flex flex-row align-items-center my-2">
                @if(@source.IsChecked)
                {
                    <span class="oi oi-check" />
                }
                else
                {
                    <div class="spinner-border text-primary" role="status" />
                }
                <span class="px-2">@source.Name</span>
            </div>
        }
    </div>

@code {

    Timer timer;
    
    List<SMSource> Sources = new List<SMSource>
    {
        new SMSource
        {
            Name = "Facebook",
            IsChecked = false
        },
        new SMSource
        {
            Name = "Instagram",
            IsChecked = false
        },
        new SMSource
        {
            Name = "LinkedIn",
            IsChecked = false
        },
        new SMSource
        {
            Name = "Twitter",
            IsChecked = false
        },
        new SMSource
        {
            Name = "Google",
            IsChecked = false
        },
        new SMSource
        {
            Name = "PayPal",
            IsChecked = false
        },
    };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        timer = new Timer();
        timer.Elapsed += new ElapsedEventHandler(UpdateStatuses);
        timer.Interval = 1000;
        timer.Enabled = true;
    }

    void UpdateStatuses(object sender, ElapsedEventArgs e)
    {
        var uncheckedSources = Sources.Where(s => s.IsChecked == false);

        if (uncheckedSources.Any() == false)
        {
            timer.Enabled = false;
        }

        Random rnd = new Random();

        var index = rnd.Next(uncheckedSources.Count());
        
        var source = Sources[index];

        source.IsChecked = true;
        
        Console.WriteLine($"{source.Name} has been checked");
        
        StateHasChanged();
    }

    private class SMSource
    {
        public string Name;
        public bool IsChecked;
    }

}