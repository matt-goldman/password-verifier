<EditForm style="color:green;" EditContext=@editContext OnValidSubmit=SignupClicked >
    <DataAnnotationsValidator />
    <ValidationSummary />
  <div class="form-group">
    <label for="username">Email address</label>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text" id="basic-addon1">ðŸ“§</span>
        </div>
        <InputText type="text" class="form-control" placeholder="your@email.com" aria-label="Username" aria-describedby="basic-addon1" id="username" style="color: green;" @bind-Value=formModel.Username />
    </div>    
  </div>

  <div class="form-group">
    <label for="Password1">Password</label>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text" id="basic-addon1">ðŸ”‘</span>
        </div>
        <InputText type="password" class="form-control" id="Password1" placeholder="Password" style="color: green;" @bind-Value="formModel.Password" />
    </div>
  </div>
  
  <div class="form-group">
    <label for="Password2">Confirm Password</label>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text" id="basic-addon1">ðŸ”‘</span>
        </div>
        <InputText type="password" class="form-control" id="Password2" placeholder="Confirm Password" style="color: green;" @bind-Value="formModel.ConfirmPassword" />
    </div>
  </div>

    <div class="form-group">
    <label for="coupon">Referral Code</label>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text" id="basic-addon1">ðŸŽ«</span>
        </div>
        <InputText type="text" class="form-control" placeholder="ABC123" aria-label="Referral Code" aria-describedby="basic-addon1" id="coupon" style="color: green;" @bind-Value="formModel.coupon" />
    </div>    
  </div>

  <button type="submit" class="btn btn-primary" >Give me savings!</button>
</EditForm>

@code {
    
    [Parameter]
    public EventCallback OnSignupClicked { get; set; }

    private EditContext editContext;

    private FormModel formModel = new FormModel();

    protected override void OnInitialized()
    {
        editContext = new EditContext(formModel);
    }
    
    private async void SignupClicked()
    {
        await OnSignupClicked.InvokeAsync(null);
    }

    private class FormModel
    {
        [Required]
        public string Username {get;set;}

        [Required]
        public string Password {get;set;}

        [CompareProperty("Password")]
        public string ConfirmPassword {get;set;}

        public string coupon { get; set; }
    }
}